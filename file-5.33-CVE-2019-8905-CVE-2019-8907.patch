From 9671c6427145781dcdb1a2e0d357c237d9573e93 Mon Sep 17 00:00:00 2001
From: Christos Zoulas <christos@zoulas.com>
Date: Thu, 24 May 2018 18:08:01 +0000
Subject: [PATCH 1/5] fix some casts

Upstream-commit: 9109a696f3289ba00eaa222fd432755ec4287e28
Signed-off-by: Kamil Dudka <kdudka@redhat.com>
---
 src/readelf.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/readelf.c b/src/readelf.c
index 4fda77e..5221138 100644
--- a/src/readelf.c
+++ b/src/readelf.c
@@ -1054,14 +1054,14 @@ donote(struct magic_set *ms, void *vbuf, size_t offset, size_t size,
 	}
 
 	if (namesz & 0x80000000) {
-	    (void)file_printf(ms, ", bad note name size %#lx",
-		(unsigned long)namesz);
+	    file_printf(ms, ", bad note name size %#lx",
+		CAST(unsigned long, namesz));
 	    return 0;
 	}
 
 	if (descsz & 0x80000000) {
-	    (void)file_printf(ms, ", bad note description size %#lx",
-		(unsigned long)descsz);
+	    file_printf(ms, ", bad note description size %#lx",
+		CAST(unsigned long, descsz));
 	    return 0;
 	}
 
-- 
2.17.2


From 78e217ce126cbc0e4645e85f567d8cf2215423df Mon Sep 17 00:00:00 2001
From: Christos Zoulas <christos@zoulas.com>
Date: Thu, 2 Aug 2018 12:46:02 +0000
Subject: [PATCH 2/5] correct error handling for file_printf() (coverity)

Upstream-commit: 813f1b8a37bc1384b33d6598ec5bad0c8e754caf
Signed-off-by: Kamil Dudka <kdudka@redhat.com>
---
 src/readelf.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/src/readelf.c b/src/readelf.c
index 5221138..d818c45 100644
--- a/src/readelf.c
+++ b/src/readelf.c
@@ -1054,14 +1054,16 @@ donote(struct magic_set *ms, void *vbuf, size_t offset, size_t size,
 	}
 
 	if (namesz & 0x80000000) {
-	    file_printf(ms, ", bad note name size %#lx",
-		CAST(unsigned long, namesz));
+		if (((file_printf(ms, ", bad note name size %#lx",
+		    CAST(unsigned long, namesz)) == -1)
+			return -1;
 	    return 0;
 	}
 
 	if (descsz & 0x80000000) {
-	    file_printf(ms, ", bad note description size %#lx",
-		CAST(unsigned long, descsz));
+		if (file_printf(ms, ", bad note description size %#lx",
+		    CAST(unsigned long, descsz)) == -1)
+		    	return -1;
 	    return 0;
 	}
 
-- 
2.17.2


From c77cc5d27747bd0c07ef9190af18114f30a2e8b2 Mon Sep 17 00:00:00 2001
From: Christos Zoulas <christos@zoulas.com>
Date: Fri, 3 Aug 2018 09:00:13 +0000
Subject: [PATCH 3/5] remove extra parens

Upstream-commit: b9e60f088847f885b5c9fde61ff8fc9645843506
Signed-off-by: Kamil Dudka <kdudka@redhat.com>
---
 src/readelf.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/readelf.c b/src/readelf.c
index d818c45..010dfe5 100644
--- a/src/readelf.c
+++ b/src/readelf.c
@@ -1054,7 +1054,7 @@ donote(struct magic_set *ms, void *vbuf, size_t offset, size_t size,
 	}
 
 	if (namesz & 0x80000000) {
-		if (((file_printf(ms, ", bad note name size %#lx",
+		if (file_printf(ms, ", bad note name size %#lx",
 		    CAST(unsigned long, namesz)) == -1)
 			return -1;
 	    return 0;
-- 
2.17.2


From 5814930561913e7b7bd21e6ee57638e847977699 Mon Sep 17 00:00:00 2001
From: Kamil Dudka <kdudka@redhat.com>
Date: Mon, 25 Feb 2019 13:02:30 +0100
Subject: [PATCH 4/5] - use SIZE_T_FORMAT instead of 'z' in size_t format
 strings - compile with c++ again

Upstream-commit: 71a15e2f48ecb3d7094260087fda1b1a2a870431
Signed-off-by: Kamil Dudka <kdudka@redhat.com>
---
 src/ascmagic.c  |  4 ++--
 src/encoding.c  |  2 +-
 src/file.h      |  3 +++
 src/is_tar.c    |  2 +-
 src/readelf.c   |  9 +++++----
 src/softmagic.c | 31 +++++++++++++++++--------------
 6 files changed, 29 insertions(+), 22 deletions(-)

diff --git a/src/ascmagic.c b/src/ascmagic.c
index 2d1abe5..abcc625 100644
--- a/src/ascmagic.c
+++ b/src/ascmagic.c
@@ -80,7 +80,7 @@ file_ascmagic(struct magic_set *ms, const struct buffer *b, int text)
 	const char *type = NULL;
 
 	bb = *b;
-	bb.flen = trim_nuls(b->fbuf, b->flen);
+	bb.flen = trim_nuls(CAST(const unsigned char *, b->fbuf), b->flen);
 
 	/* If file doesn't look like any sort of text, give up. */
 	if (file_encoding(ms, &bb, &ubuf, &ulen, &code, &code_mime,
@@ -101,7 +101,7 @@ file_ascmagic_with_encoding(struct magic_set *ms,
     const char *type, int text)
 {
 	struct buffer bb;
-	const unsigned char *buf = b->fbuf;
+	const unsigned char *buf = CAST(const unsigned char *, b->fbuf);
 	size_t nbytes = b->flen;
 	unsigned char *utf8_buf = NULL, *utf8_end;
 	size_t mlen, i;
diff --git a/src/encoding.c b/src/encoding.c
index 3e7b9e5..62e7906 100644
--- a/src/encoding.c
+++ b/src/encoding.c
@@ -69,7 +69,7 @@ protected int
 file_encoding(struct magic_set *ms, const struct buffer *b, unichar **ubuf,
     size_t *ulen, const char **code, const char **code_mime, const char **type)
 {
-	const unsigned char *buf = b->fbuf;
+	const unsigned char *buf = CAST(const unsigned char *, b->fbuf);
 	size_t nbytes = b->flen;
 	size_t mlen;
 	int rv = 1, ucs_type;
diff --git a/src/file.h b/src/file.h
index 66598bc..8162364 100644
--- a/src/file.h
+++ b/src/file.h
@@ -40,6 +40,9 @@
 #ifndef __STDC_LIMIT_MACROS
 #define __STDC_LIMIT_MACROS
 #endif
+#ifndef __STDC_FORMAT_MACROS
+#define __STDC_FORMAT_MACROS
+#endif
 
 #ifdef WIN32
   #ifdef _WIN64
diff --git a/src/is_tar.c b/src/is_tar.c
index 7110604..d5c6f1a 100644
--- a/src/is_tar.c
+++ b/src/is_tar.c
@@ -62,7 +62,7 @@ static const char tartype[][32] = {	/* should be equal to messages */
 protected int
 file_is_tar(struct magic_set *ms, const struct buffer *b)
 {
-	const unsigned char *buf = b->fbuf;
+	const unsigned char *buf = CAST(const unsigned char *, b->fbuf);
 	size_t nbytes = b->flen;
 	/*
 	 * Do the tar test first, because if the first file in the tar
diff --git a/src/readelf.c b/src/readelf.c
index 010dfe5..70d5ff1 100644
--- a/src/readelf.c
+++ b/src/readelf.c
@@ -726,7 +726,7 @@ do_core_note(struct magic_set *ms, unsigned char *nbuf, uint32_t type,
 			if (file_printf(ms, ", from '%.31s', pid=%u, uid=%u, "
 			    "gid=%u, nlwps=%u, lwp=%u (signal %u/code %u)",
 			    file_printable(sbuf, sizeof(sbuf),
-			    CAST(char *, pi.cpi_name)),
+			    RCAST(char *, pi.cpi_name)),
 			    elf_getu32(swap, (uint32_t)pi.cpi_pid),
 			    elf_getu32(swap, pi.cpi_euid),
 			    elf_getu32(swap, pi.cpi_egid),
@@ -1117,7 +1117,7 @@ donote(struct magic_set *ms, void *vbuf, size_t offset, size_t size,
 			return offset;
 	}
 
-	if (namesz == 7 && strcmp((char *)&nbuf[noff], "NetBSD") == 0) {
+	if (namesz == 7 && strcmp(RCAST(char *, &nbuf[noff]), "NetBSD") == 0) {
 		if (descsz > 100)
 			descsz = 100;
 		switch (xnh_type) {
@@ -1586,7 +1586,7 @@ protected int
 file_tryelf(struct magic_set *ms, const struct buffer *b)
 {
 	int fd = b->fd;
-	const unsigned char *buf = b->fbuf;
+	const unsigned char *buf = CAST(const unsigned char *, b->fbuf);
 	size_t nbytes = b->flen;
 	union {
 		int32_t l;
@@ -1608,7 +1608,8 @@ file_tryelf(struct magic_set *ms, const struct buffer *b)
 	 * file locations and thus file(1) cannot determine it from easily.
 	 * Instead we traverse thru all section headers until a symbol table
 	 * one is found or else the binary is stripped.
-	 * Return immediately if it's not ELF (so we avoid pipe2file unless needed).
+	 * Return immediately if it's not ELF (so we avoid pipe2file unless
+	 * needed).
 	 */
 	if (buf[EI_MAG0] != ELFMAG0
 	    || (buf[EI_MAG1] != ELFMAG1 && buf[EI_MAG1] != OLFMAG1)
diff --git a/src/softmagic.c b/src/softmagic.c
index 00d5aac..e5560dd 100644
--- a/src/softmagic.c
+++ b/src/softmagic.c
@@ -47,7 +47,7 @@ private int match(struct magic_set *, struct magic *, uint32_t,
     const struct buffer *, size_t, int, int, int, uint16_t *,
     uint16_t *, int *, int *, int *);
 private int mget(struct magic_set *, struct magic *, const struct buffer *,
-    const unsigned char *, size_t, 
+    const unsigned char *, size_t,
     size_t, unsigned int, int, int, int, uint16_t *,
     uint16_t *, int *, int *, int *);
 private int msetoffset(struct magic_set *, struct magic *, struct buffer *,
@@ -208,7 +208,8 @@ flush:
 		ms->line = m->lineno;
 
 		/* if main entry matches, print it... */
-		switch (mget(ms, m, b, bb.fbuf, bb.flen, offset, cont_level,
+		switch (mget(ms, m, b, CAST(const unsigned char *, bb.fbuf),
+		    bb.flen, offset, cont_level,
 		    mode, text, flip, indir_count, name_count,
 		    printed_something, need_separator, returnval)) {
 		case -1:
@@ -301,7 +302,8 @@ flush:
 					continue;
 			}
 #endif
-			switch (mget(ms, m, b, bb.fbuf, bb.flen, offset,
+			switch (mget(ms, m, b, CAST(const unsigned char *,
+			    bb.fbuf), bb.flen, offset,
 			    cont_level, mode, text, flip, indir_count,
 			    name_count, printed_something, need_separator,
 			    returnval)) {
@@ -614,7 +616,7 @@ mprint(struct magic_set *ms, struct magic *m, const struct buffer *b)
   	case FILE_BESTRING16:
   	case FILE_LESTRING16:
 		if (m->reln == '=' || m->reln == '!') {
-			if (file_printf(ms, F(ms, desc, "%s"), 
+			if (file_printf(ms, F(ms, desc, "%s"),
 			    file_printable(sbuf, sizeof(sbuf), m->value.s))
 			    == -1)
 				return -1;
@@ -775,7 +777,7 @@ mprint(struct magic_set *ms, struct magic *m, const struct buffer *b)
 		t = ms->offset;
 		break;
 	case FILE_DER:
-		if (file_printf(ms, F(ms, desc, "%s"), 
+		if (file_printf(ms, F(ms, desc, "%s"),
 		    file_printable(sbuf, sizeof(sbuf), ms->ms_value.s)) == -1)
 			return -1;
 		t = ms->offset;
@@ -900,8 +902,8 @@ moffset(struct magic_set *ms, struct magic *m, const struct buffer *b,
 			if (o == -1 || (size_t)o > nbytes) {
 				if ((ms->flags & MAGIC_DEBUG) != 0) {
 					(void)fprintf(stderr,
-					    "Bad DER offset %d nbytes=%zu",
-					    o, nbytes);
+					    "Bad DER offset %d nbytes=%"
+					    SIZE_T_FORMAT "u", o, nbytes);
 				}
 				*op = 0;
 				return 0;
@@ -916,8 +918,8 @@ moffset(struct magic_set *ms, struct magic *m, const struct buffer *b,
 
 	if ((size_t)o > nbytes) {
 #if 0
-		file_error(ms, 0, "Offset out of range %zu > %zu",
-		    (size_t)o, nbytes);
+		file_error(ms, 0, "Offset out of range %" SIZE_T_FORMAT
+		    "u > %" SIZE_T_FORMAT "u", (size_t)o, nbytes);
 #endif
 		return -1;
 	}
@@ -1135,7 +1137,7 @@ mconvert(struct magic_set *ms, struct magic *m, int flip)
 			 * string by p->s, so we need to deduct sz.
 			 * Because we can use one of the bytes of the length
 			 * after we shifted as NUL termination.
-			 */ 
+			 */
 			len = sz;
 		}
 		while (len--)
@@ -1209,7 +1211,7 @@ mconvert(struct magic_set *ms, struct magic *m, int flip)
 			goto out;
 		return 1;
 	case FILE_BEDOUBLE:
-		p->q = BE64(p); 
+		p->q = BE64(p);
 		if (cvt_double(p, m) == -1)
 			goto out;
 		return 1;
@@ -1427,8 +1429,8 @@ msetoffset(struct magic_set *ms, struct magic *m, struct buffer *bb,
 			return -1;
 		if (o != 0) {
 			// Not yet!
-			file_magerror(ms, "non zero offset %zu at"
-			    " level %u", o, cont_level);
+			file_magerror(ms, "non zero offset %" SIZE_T_FORMAT
+			    "u at level %u", o, cont_level);
 			return -1;
 		}
 		if ((size_t)-m->offset > b->elen)
@@ -1447,7 +1449,8 @@ normal:
 		}
 	}
 	if ((ms->flags & MAGIC_DEBUG) != 0) {
-		fprintf(stderr, "bb=[%p,%zu], %d [b=%p,%zu], [o=%#x, c=%d]\n",
+		fprintf(stderr, "bb=[%p,%" SIZE_T_FORMAT "u], %d [b=%p,%"
+		    SIZE_T_FORMAT "u], [o=%#x, c=%d]\n",
 		    bb->fbuf, bb->flen, ms->offset, b->fbuf, b->flen,
 		    m->offset, cont_level);
 	}
-- 
2.17.2


From a4fe96cf1589a8eb39ef238487569dae9cbb21cb Mon Sep 17 00:00:00 2001
From: Christos Zoulas <christos@zoulas.com>
Date: Mon, 18 Feb 2019 17:46:56 +0000
Subject: [PATCH 5/5] PR/62: spinpx: limit size of file_printable.

Upstream-commit: d65781527c8134a1202b2649695d48d5701ac60b
Signed-off-by: Kamil Dudka <kdudka@redhat.com>
---
 src/file.h      |  2 +-
 src/funcs.c     |  7 ++++---
 src/readelf.c   |  5 +++--
 src/softmagic.c | 12 +++++++-----
 4 files changed, 15 insertions(+), 11 deletions(-)

diff --git a/src/file.h b/src/file.h
index 8162364..f2d28c1 100644
--- a/src/file.h
+++ b/src/file.h
@@ -503,7 +503,7 @@ protected int file_looks_utf8(const unsigned char *, size_t, unichar *,
     size_t *);
 protected size_t file_pstring_length_size(const struct magic *);
 protected size_t file_pstring_get_length(const struct magic *, const char *);
-protected char * file_printable(char *, size_t, const char *);
+protected char * file_printable(char *, size_t, const char *, size_t);
 #ifdef __EMX__
 protected int file_os2_apptype(struct magic_set *, const char *, const void *,
     size_t);
diff --git a/src/funcs.c b/src/funcs.c
index f59f4a1..38a5c5f 100644
--- a/src/funcs.c
+++ b/src/funcs.c
@@ -580,12 +580,13 @@ file_pop_buffer(struct magic_set *ms, file_pushbuf_t *pb)
  * convert string to ascii printable format.
  */
 protected char *
-file_printable(char *buf, size_t bufsiz, const char *str)
+file_printable(char *buf, size_t bufsiz, const char *str, size_t slen)
 {
-	char *ptr, *eptr;
+	char *ptr, *eptr = buf + bufsiz - 1;
 	const unsigned char *s = (const unsigned char *)str;
+	const unsigned char *es = s + slen;
 
-	for (ptr = buf, eptr = ptr + bufsiz - 1; ptr < eptr && *s; s++) {
+	for (ptr = buf;  ptr < eptr && s < es && *s; s++) {
 		if (isprint(*s)) {
 			*ptr++ = *s;
 			continue;
diff --git a/src/readelf.c b/src/readelf.c
index 70d5ff1..2d4c9a4 100644
--- a/src/readelf.c
+++ b/src/readelf.c
@@ -726,7 +726,7 @@ do_core_note(struct magic_set *ms, unsigned char *nbuf, uint32_t type,
 			if (file_printf(ms, ", from '%.31s', pid=%u, uid=%u, "
 			    "gid=%u, nlwps=%u, lwp=%u (signal %u/code %u)",
 			    file_printable(sbuf, sizeof(sbuf),
-			    RCAST(char *, pi.cpi_name)),
+			    RCAST(char *, pi.cpi_name), sizeof(pi.cpi_name)),
 			    elf_getu32(swap, (uint32_t)pi.cpi_pid),
 			    elf_getu32(swap, pi.cpi_euid),
 			    elf_getu32(swap, pi.cpi_egid),
@@ -1576,7 +1576,8 @@ dophn_exec(struct magic_set *ms, int clazz, int swap, int fd, off_t off,
 		return -1;
 	if (interp[0])
 		if (file_printf(ms, ", interpreter %s",
-		    file_printable(ibuf, sizeof(ibuf), interp)) == -1)
+		    file_printable(ibuf, sizeof(ibuf), interp, sizeof(interp)))
+			== -1)
 			return -1;
 	return 0;
 }
diff --git a/src/softmagic.c b/src/softmagic.c
index e5560dd..7f34ca3 100644
--- a/src/softmagic.c
+++ b/src/softmagic.c
@@ -617,8 +617,8 @@ mprint(struct magic_set *ms, struct magic *m, const struct buffer *b)
   	case FILE_LESTRING16:
 		if (m->reln == '=' || m->reln == '!') {
 			if (file_printf(ms, F(ms, desc, "%s"),
-			    file_printable(sbuf, sizeof(sbuf), m->value.s))
-			    == -1)
+			    file_printable(sbuf, sizeof(sbuf), m->value.s,
+			    sizeof(m->value.s))) == -1)
 				return -1;
 			t = ms->offset + m->vallen;
 		}
@@ -645,7 +645,8 @@ mprint(struct magic_set *ms, struct magic *m, const struct buffer *b)
 			}
 
 			if (file_printf(ms, F(ms, desc, "%s"),
-			    file_printable(sbuf, sizeof(sbuf), str)) == -1)
+			    file_printable(sbuf, sizeof(sbuf), str,
+				sizeof(p->s) - (str - p->s))) == -1)
 				return -1;
 
 			if (m->type == FILE_PSTRING)
@@ -751,7 +752,7 @@ mprint(struct magic_set *ms, struct magic *m, const struct buffer *b)
 			return -1;
 		}
 		rval = file_printf(ms, F(ms, desc, "%s"),
-		    file_printable(sbuf, sizeof(sbuf), cp));
+		    file_printable(sbuf, sizeof(sbuf), cp, ms->search.rm_len));
 		free(cp);
 
 		if (rval == -1)
@@ -778,7 +779,8 @@ mprint(struct magic_set *ms, struct magic *m, const struct buffer *b)
 		break;
 	case FILE_DER:
 		if (file_printf(ms, F(ms, desc, "%s"),
-		    file_printable(sbuf, sizeof(sbuf), ms->ms_value.s)) == -1)
+		    file_printable(sbuf, sizeof(sbuf), ms->ms_value.s,
+			sizeof(ms->ms_value.s))) == -1)
 			return -1;
 		t = ms->offset;
 		break;
-- 
2.17.2

